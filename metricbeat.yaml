---
apiVersion: v1
kind: Secret
metadata:
    name: metricbeat-ca
    namespace: kube-system
data:
    ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lVWTFIQ3Qyc2RWVU9aeEVVYjhvdzRua1R4K1JBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd05ERXlNREFHQTFVRUF4TXBSV3hoYzNScFl5QkRaWEowYVdacFkyRjBaU0JVYjI5c0lFRjFkRzluWlc1bApjbUYwWldRZ1EwRXdIaGNOTWpFd09ERTVNRFl4TXpNNVdoY05NalF3T0RFNE1EWXhNek01V2pBME1USXdNQVlEClZRUURFeWxGYkdGemRHbGpJRU5sY25ScFptbGpZWFJsSUZSdmIyd2dRWFYwYjJkbGJtVnlZWFJsWkNCRFFUQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPQzZWUUJoeFBKUUhYMzQrZDdxY21QbgoyMkRvaVV0NUdERjFycEJ3Zm96Nlo4aVp5VHdNUVlncXZJRUJsUGt3MlF6WThObVVIZGg4RSt3c1c1dlFWdEg4CjFqMHFwaTFxZWNuWXpmTUNzVWVlRmVWamtTRjRMK3JYZXl2RFUyWDgvK1Y1YVhxQ2xOeVJXWUpLRFQxejFVZ00KUEQ3enFPWnFjTFVITE54bG9TMW1vYjl6N29Rekw3clRkTW11WEFBTHFwRW4zLzdnTXJHWFhqV0ZNcHNadTFxYQpSWVBqSU9oUzFKY2tyUmVydmV3RWN2bTBud3lCQnpiQWhHRFFoRCszdjdUS0xRQTBNRytwTXlTWmVSQlJPZnJDCkhWcjh4b04yYVF5bCszWWJKMDBKeGJjYlVkNUl6dWtScmVFeFJnWGRtamRKbEd5N1NMY0NwcVBXQVBXaDUya0MKQXdFQUFhTlRNRkV3SFFZRFZSME9CQllFRkhRUk1oWmJZVlB4WjlVSUxWU3NGS3dzZ3lUZk1COEdBMVVkSXdRWQpNQmFBRkhRUk1oWmJZVlB4WjlVSUxWU3NGS3dzZ3lUZk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBREFRbTNhaEIxSEVTVWU0dEhiTENKaGN5TG1BZFEzdnNLcSs4Lzk3RGo3Q2cyWUEKam5ucHZJUEpVcWdtalcrYm9JL0N1WmRIN1hjZlNKWlVKdG9TbXFmMk1RQU9QOVEwZXd3aEdlKzhSNmRjYllzNwpHc3crV3drYWRoZ2R1N3JYdTBTSFNBZ0lndWVNVmNyY20xL094cEdhbzlGYWsvWEQyUDV1S3F0N0tsR0dNZVJHCjN6STduc0tQblFMTjRlcjhTR3I5SkJYTEszTGhrNHlGN0Znb05UeXBKVFVlWTRTMEN1bFpsTEhMT3MySXlWTGEKenZ0YUJ4T2l0ZjYycm5ZdjBTWWgxYWkvQXBVZ1NMSjZYd2VMK0xMUmgxSGhQR2hDSnlUUUtobFFxTnRuNmJQdQp1YnVMc2pmcm5VOEZJVHdxZDRiYkFMS3RSY1lNamRZcXYwQkQ4Z2M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: metricbeat-daemonset-config
    namespace: kube-system
    labels:
        k8s-app: metricbeat
data:
    metricbeat.yml: |-
        metricbeat.config.modules:
          # Mounted `metricbeat-daemonset-modules` configmap:
          path: ${path.config}/modules.d/*.yml
          # Reload module configs as they change:
          reload.enabled: false

        metricbeat.autodiscover:
          providers:
            - type: kubernetes
              scope: cluster
              node: ${NODE_NAME}
              unique: true
              templates:
                - config:
                    - module: kubernetes
                      hosts: ["kube-state-metrics:8080"]
                      period: 10s
                      add_metadata: true
                      metricsets:
                        - state_node
                        - state_deployment
                        - state_daemonset
                        - state_replicaset
                        - state_pod
                        - state_container
                        - state_cronjob
                        - state_resourcequota
                        - state_statefulset
                        - state_service
                    - module: kubernetes
                      metricsets:
                        - apiserver
                      hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
                      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                      ssl.certificate_authorities:
                        - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                      period: 30s
                    # Uncomment this to get k8s events:
                    #- module: kubernetes
                    #  metricsets:
                    #    - event
            # To enable hints based autodiscover uncomment this:
            #- type: kubernetes
            #  node: ${NODE_NAME}
            #  hints.enabled: true

        processors:
          - add_cloud_metadata:

        #cloud.id: ${ELASTIC_CLOUD_ID}
        #cloud.auth: ${ELASTIC_CLOUD_AUTH}

        output.elasticsearch:
          hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
          username: ${ELASTICSEARCH_USERNAME}
          password: ${ELASTICSEARCH_PASSWORD}
          # ssl,不需要的话将下面三个去掉
          protocol: "https"
          ssl.enabled: true
          ssl.certificate_authorities:
            - /usr/share/metricbeat/ssl/ca.crt
        setup.kibana:
          host: '${KIBANA_HOST:kibana}:${KIBANA_PORT:5601}'
          username: ${ELASTICSEARCH_USERNAME}
          password: ${ELASTICSEARCH_PASSWORD}
          # ssl,不需要的话将下面三个去掉
          protocol: "https"
          ssl.enabled: true
          ssl.certificate_authorities:
            - /usr/share/metricbeat/ssl/ca.crt
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: metricbeat-daemonset-modules
    namespace: kube-system
    labels:
        k8s-app: metricbeat
data:
    system.yml: |-
        - module: system
          period: 10s
          metricsets:
            - cpu
            - load
            - memory
            - network
            - process
            - process_summary
            #- core
            #- diskio
            #- socket
          processes: ['.*']
          process.include_top_n:
            by_cpu: 5      # include top 5 processes by CPU
            by_memory: 5   # include top 5 processes by memory

        - module: system
          period: 1m
          metricsets:
            - filesystem
            - fsstat
          processors:
          - drop_event.when.regexp:
              system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)'
    kubernetes.yml: |-
        - module: kubernetes
          metricsets:
            - node
            - system
            - pod
            - container
            - volume
          period: 10s
          host: ${NODE_NAME}
          hosts: ["https://${NODE_NAME}:10250"]
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          ssl.verification_mode: "none"
          # If there is a CA bundle that contains the issuer of the certificate used in the Kubelet API,
          # remove ssl.verification_mode entry and use the CA, for instance:
          #ssl.certificate_authorities:
            #- /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        # Currently `proxy` metricset is not supported on Openshift, comment out section
        - module: kubernetes
          metricsets:
            - proxy
          period: 10s
          host: ${NODE_NAME}
          hosts: ["localhost:10249"]
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: metricbeat
    namespace: kube-system
    labels:
        k8s-app: metricbeat
spec:
    selector:
        matchLabels:
            k8s-app: metricbeat
    template:
        metadata:
            labels:
                k8s-app: metricbeat
        spec:
            serviceAccountName: metricbeat
            terminationGracePeriodSeconds: 30
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            containers:
                - name: metricbeat
                  image: docker.elastic.co/beats/metricbeat:7.14.2
                  args: [
                          "-c", "/etc/metricbeat.yml",
                          "-e",
                          "-system.hostfs=/hostfs",
                  ]
                  env:
                      - name: KIBANA_HOST
                        value: "10.0.0.40"
                      - name: KIBANA_PORT
                        value: "5601"
                      - name: ELASTICSEARCH_HOST
                        value: "10.0.0.40"
                      - name: ELASTICSEARCH_PORT
                        value: "9200"
                      - name: ELASTICSEARCH_USERNAME
                        value: "elastic"
                      - name: ELASTICSEARCH_PASSWORD
                        value: "SopeiMGr093@$%^ELK"
#                      - name: ELASTIC_CLOUD_ID
#                        value:
#                      - name: ELASTIC_CLOUD_AUTH
#                        value:
                      - name: NODE_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: spec.nodeName
                  securityContext:
                      runAsUser: 0
                      # If using Red Hat OpenShift uncomment this:
                      #privileged: true
                  resources:
                      limits:
                          memory: 200Mi
                      requests:
                          cpu: 100m
                          memory: 100Mi
                  volumeMounts:
                      - name: config
                        mountPath: /etc/metricbeat.yml
                        readOnly: true
                        subPath: metricbeat.yml
                      - name: data
                        mountPath: /usr/share/metricbeat/data
                      - name: modules
                        mountPath: /usr/share/metricbeat/modules.d
                        readOnly: true
                      - name: proc
                        mountPath: /hostfs/proc
                        readOnly: true
                      - name: secret
                        mountPath: /usr/share/metricbeat/ssl/ca.crt
                          # 必须添加subPath, 否则Exiting: error initializing publisher: 1 error: read /usr/share/filebeat/ssl/ca.crt: is a directory reading /usr/share/filebeat/ssl/ca.crt
                        subPath: ca.crt
                      - name: cgroup
                        mountPath: /hostfs/sys/fs/cgroup
                        readOnly: true
            volumes:
                - name: proc
                  hostPath:
                      path: /proc
                - name: cgroup
                  hostPath:
                      path: /sys/fs/cgroup
                - name: config
                  configMap:
                      defaultMode: 0640
                      name: metricbeat-daemonset-config
                - name: modules
                  configMap:
                      defaultMode: 0640
                      name: metricbeat-daemonset-modules
                - name: secret
                  secret:
                      defaultMode: 0640
                      secretName: metricbeat-ca
                - name: data
                  hostPath:
                      # When metricbeat runs as non-root user, this directory needs to be writable by group (g+w)
                      path: /var/lib/metricbeat-data
                      type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: metricbeat
subjects:
    - kind: ServiceAccount
      name: metricbeat
      namespace: kube-system
roleRef:
    kind: ClusterRole
    name: metricbeat
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: metricbeat
    namespace: kube-system
subjects:
    - kind: ServiceAccount
      name: metricbeat
      namespace: kube-system
roleRef:
    kind: Role
    name: metricbeat
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: metricbeat-kubeadm-config
    namespace: kube-system
subjects:
    - kind: ServiceAccount
      name: metricbeat
      namespace: kube-system
roleRef:
    kind: Role
    name: metricbeat-kubeadm-config
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: metricbeat
    labels:
        k8s-app: metricbeat
rules:
    - apiGroups: [""]
      resources:
          - nodes
          - namespaces
          - events
          - pods
          - services
      verbs: ["get", "list", "watch"]
    # Enable this rule only if planing to use Kubernetes keystore
    #- apiGroups: [""]
    #  resources:
    #  - secrets
    #  verbs: ["get"]
    - apiGroups: ["extensions"]
      resources:
          - replicasets
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources:
          - statefulsets
          - deployments
          - replicasets
      verbs: ["get", "list", "watch"]
    - apiGroups:
          - ""
      resources:
          - nodes/stats
      verbs:
          - get
    - nonResourceURLs:
          - "/metrics"
      verbs:
          - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: metricbeat
    # should be the namespace where metricbeat is running
    namespace: kube-system
    labels:
        k8s-app: metricbeat
rules:
    - apiGroups:
          - coordination.k8s.io
      resources:
          - leases
      verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: metricbeat-kubeadm-config
    namespace: kube-system
    labels:
        k8s-app: metricbeat
rules:
    - apiGroups: [""]
      resources:
          - configmaps
      resourceNames:
          - kubeadm-config
      verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: metricbeat
    namespace: kube-system
    labels:
        k8s-app: metricbeat
